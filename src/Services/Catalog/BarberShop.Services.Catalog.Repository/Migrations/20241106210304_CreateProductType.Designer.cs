// <auto-generated />
using System;
using BarberShop.Services.Catalog.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberShop.Services.Products.Repository.Migrations
{
    [DbContext(typeof(CatalogServiceDbContext))]
    [Migration("20241106210304_CreateProductType")]
    partial class CreateProductType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarberShop.Services.Catalog.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("BarberShop.Services.Catalog.Domain.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "A booking to an execution of a service.",
                            Name = "Booking"
                        },
                        new
                        {
                            Id = 1,
                            Description = "A physical item.",
                            Name = "Item"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A subscription to a service.",
                            Name = "Booking"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
